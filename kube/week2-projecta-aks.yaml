apiVersion: v1
kind: Namespace
metadata:
  name: projecta
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: week2-projecta-server
  namespace: projecta
  labels:
    app: week2-projecta-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: week2-projecta-server
  template:
    metadata:
      labels:
        app: week2-projecta-server
    spec:
      containers:
        - name: nginx-container
          image: projectaregistry.azurecr.io/oresky73/week5-server:latest  # oresky73/week5-server:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: week2-projecta-service
#   namespace: projecta
#   annotations:
#     service.beta.kubernetes.io/azure-load-balancer-resource-group: MC_wordpress-rg_projecta-cluster_uksouth
#     service.beta.kubernetes.io/azure-load-balancer-ip: projecta-static-ip
# spec:
#   type: LoadBalancer
#   selector:
#     app: week2-projecta-server
#   ports:
#     - port: 80
#       targetPort: 80

apiVersion: v1
kind: Service
metadata:
  name: projecta-service
  namespace: projecta
spec:
  selector:
    app: week2-projecta-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

# ingress resource can be added here later if needed
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: projecta-ingress
  namespace: projecta
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - projecta.glanik.com
      secretName: projecta-tls
  rules:
    - host: projecta.glanik.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: projecta-service
                port:
                  number: 80
---
# network policy can be added here later if needed
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-policy
  namespace: projecta
spec:
  podSelector:
    matchLabels:
      app: week2-projecta-server
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
  policyTypes:
    - Ingress
---
# HPA can be added here later if needed

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: projecta-hpa
  namespace: projecta
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: week2-projecta-server
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
---

# clusterissuer can be added here later if needed
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@projecta.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx
