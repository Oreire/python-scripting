
# ---------------------------------------------------------------------
# üîó ClusterIP Service
# Exposes the Deployment internally to the cluster
# ---------------------------------------------------------------------

apiVersion: v1
kind: Service
metadata:
  name: projecta-service
  namespace: projecta
spec:
  type: ClusterIP
  selector:
    app: week2-projecta-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---

# ---------------------------------------------------------------------
# üîê Cert-Manager ClusterIssuer
# Configures Let's Encrypt production endpoint for automated TLS certificates
# ---------------------------------------------------------------------

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: your-email@example.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx

---
# ---------------------------------------------------------------------
# üìú Certificate Resource
# Requests and stores TLS certificate for glanik.duckdns.org
# ---------------------------------------------------------------------
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: glanik-cert
  namespace: projecta
spec:
  secretName: glanik-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: glanik.duckdns.org
  dnsNames:
    - glanik.duckdns.org
  privateKey:
    rotationPolicy: Always
---
# ---------------------------------------------------------------------
# üåê Ingress Resource (Temporary, HTTP only)
# Routes external traffic to the internal Service without TLS
# ---------------------------------------------------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: projecta-ingress
  namespace: projecta
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"  # allow HTTP
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: glanik.duckdns.org
      http:
        paths:
          # Allow ACME challenge path for future TLS
          - path: /.well-known/acme-challenge(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: projecta-service
                port:
                  number: 80
          # Main application traffic
          - path: /(.+)?
            pathType: ImplementationSpecific
            backend:
              service:
                name: projecta-service
                port:
                  number: 80
